// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuotationsWebApi.Context;

namespace QuotationsWebApi.Data.Migrations
{
    [DbContext(typeof(QuotationContext))]
    [Migration("20210714134550_RefactorDatabase2")]
    partial class RefactorDatabase2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9");

            modelBuilder.Entity("QuotationsWebApi.Entities.Dossier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Dossiers");
                });

            modelBuilder.Entity("QuotationsWebApi.Entities.Quotation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DossierId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidUntilDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("QuotationsWebApi.Entities.Quotation", b =>
                {
                    b.HasOne("QuotationsWebApi.Entities.Dossier", "CurrentDossier")
                        .WithMany("Quotations")
                        .HasForeignKey("DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentDossier");
                });

            modelBuilder.Entity("QuotationsWebApi.Entities.Dossier", b =>
                {
                    b.Navigation("Quotations");
                });
#pragma warning restore 612, 618
        }
    }
}
